---
title: 内核驱动开发0.2-EPROCESS
published: 2024-11-15T22:06:26+08:00
summary: "EPROCESS结构"
tags: [EPROCESS]
categories: '内核驱动'
draft: false 
lang: ''
---

# EPROCESS结构

## EPROCESS 的主要内容和作用

**1. 进程管理：**
EPROCESS 结构是内核层面对进程管理的核心。每个正在运行的进程都对应一个唯一的 EPROCESS 结构，它包含了操作系统管理进程所需的各种信息。

**2. 结构存储位置：**
 EPROCESS 结构体存储在内核空间中，用户态的进程无法直接访问。它由内核为每个进程动态分配，当进程创建时，操作系统会生成一个新的 EPROCESS 结构。当进程终止时，内核会清理并释放该结构。

**3. EPROCESS 结构中存储的内容**： EPROCESS 中包含了各种与进程相关的信息，下面是其中的一些主要内容：

- UniqueProcessId：进程的唯一标识符（PID）。
- InheritedFromUniqueProcessId：父进程的 PID。
- ActiveProcessLinks：指向其他活动进程的链表，用于将所有活动进程组织在一起。
- ThreadListHead：指向该进程中线程列表的头，进程中的所有线程都由这个列表管理。
- Peb（Process Environment Block）：指向用户模式的进程环境块，它包含了许多与进程执行相关的参数，如环境变量、文件句柄等。
- Vm：虚拟内存管理信息，如地址空间映射、分页表等。
- Quota：进程使用的内存配额。
- ExitStatus：进程退出的状态。

**4. EPROCESS 的意义和作用：**

内存管理：进程的虚拟内存、分页、内存保护等信息都存储在 EPROCESS 结构中。
调度：内核使用 EPROCESS 结构来确定调度信息，跟踪哪些进程应该运行、正在等待等。
安全与权限：进程的安全上下文（如令牌、权限）也通过 EPROCESS 进行管理。
资源管理：EPROCESS 记录了进程使用的系统资源，如文件句柄、内存配额等。

**5. 解决的问题：** EPROCESS 的存在为 Windows 内核提供了一种集中化、结构化的方式来管理每个进程的所有关键信息。它简化了内核对进程的管理，实现了进程的创建、终止、调度、内存分配等功能。

**6. 调用和修改 EPROCESS：**

调用：通常情况下，内核模式驱动程序和调试器会调用 EPROCESS 结构来查询或修改进程的信息。比如，一个驱动程序想要枚举系统中的所有进程，或修改某个进程的权限，就需要访问 EPROCESS。
修改：通常只有内核或者特权驱动才能修改 EPROCESS，例如当进程的状态发生改变（例如进程退出）时，内核会自动更新 EPROCESS 结构中的信息。


## EPROCESS 的使用场景

**进程创建：**
当创建新进程时，Windows 内核会为该进程分配一个 EPROCESS 结构并初始化其字段。
**进程调度：**
操作系统的调度器需要频繁访问 EPROCESS 来决定进程的调度优先级、状态等信息。
**进程终止：**
当进程终止时，内核会更新 EPROCESS 的状态，并最终释放与进程相关的资源。

可以在编写内核驱动程序时，通过 Windows 提供的内核 API（如 PsLookupProcessByProcessId）来获取 PEPROCESS 并进行相关操作